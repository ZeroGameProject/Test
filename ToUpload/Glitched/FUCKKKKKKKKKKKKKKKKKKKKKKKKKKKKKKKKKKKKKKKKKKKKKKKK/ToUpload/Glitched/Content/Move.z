 class Move : ZilchComponent
{
    var Start : Real3;
    var   Second : Real3;
    var  Forward : Boolean;
    var Active : Boolean;
    var  Back : Boolean;
    var Move : Real;
    var Pos : Integer;
    var Begin : Boolean;
    function Initialize(init : CogInitializer)
    {
        this.Begin = true;
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        var rnd = Random();
        var temp = rnd.Range(0.01, 0.05);
        this.Move = temp;

    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if (this.Active == true) 
        {
            if (this.Begin == true)
            {
            this.Start = this.Owner.Transform.Translation;
            var temp = Real (this.Owner.Transform.Translation.X + 5);
            this.Second = Real3(temp, this.Owner.Transform.Translation.Y, 0);
            this.Forward = true;
            this.Begin = false;
    }
            this.Owner.Transform.Translation = Real3(this.Owner.Transform.Translation.X + (this.Move * this.Pos), this.Owner.Transform.Translation.Y, 0);
        if (this.Forward == true)
        {
            this.Pos = 1;
    }
        if (this.Back == true)
    {
        this.Pos = -1;
        
    }
    if (this.Owner.Transform.Translation.X > this.Second.X)
    {
        this.Forward = false;
        this.Back = true;
        Console.WriteLine("test1");
    }
    if (this.Owner.Transform.Translation.X < this.Start.X)
    {
        this.Forward = true;
        this.Back = false;
        Console.WriteLine("test2");
        
            }
        }
    }
}
